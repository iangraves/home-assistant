set_all_ac_mode:
  alias: Set All ACs Mode (Selective)
  mode: parallel
  fields:
    mode:
      description: 'Mode to set (cool/heat/off)'
      example: 'cool'
    fan:
      description: 'Fan mode (low/medium/high/auto)'
      example: 'high'
    temperature:
      description: 'Temperature to set'
      example: 70
    entities:
      description: 'List of climate entities'
      example: "climate.living_room_ac, climate.primary_ac"
  sequence:
    - repeat:
        for_each: "{{ entities }}"
        sequence:
          - choose:
              - conditions: "{{ mode != 'off' }}"
                sequence:
                  - service: climate.set_hvac_mode
                    data:
                      entity_id: "{{ repeat.item }}"
                      hvac_mode: "{{ mode }}"
                  - service: climate.set_temperature
                    data:
                      entity_id: "{{ repeat.item }}"
                      temperature: "{{ temperature }}"
                  - service: climate.set_fan_mode
                    data:
                      entity_id: "{{ repeat.item }}"
                      fan_mode: "{{ fan }}"
              - conditions: "{{ mode == 'off' }}"
                sequence:
                  - service: climate.set_hvac_mode
                    data:
                      entity_id: "{{ repeat.item }}"
                      hvac_mode: "off"

set_ac_if_needed:
  alias: Set AC If Needed
  mode: parallel
  fields:
    entity:
      description: 'Target climate entity'
      example: "climate.living_room_ac"
    mode:
      description: 'HVAC mode (cool/heat/off/auto/dry/fan_only)'
      example: "cool"
    temperature:
      description: 'Temperature to set'
      example: 70
    fan:
      description: 'Fan mode (low/medium/high/auto)'
      example: "high"
  sequence:
    - choose:
        - conditions: >
            {{ mode != "off" and (
              not is_state(entity, mode)
              or (state_attr(entity, 'temperature') | float != temperature | float)
              or (state_attr(entity, 'fan_mode') != fan)
            ) }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: "{{ entity }}"
                hvac_mode: "{{ mode | lower }}"
            - service: climate.set_temperature
              data:
                entity_id: "{{ entity }}"
                temperature: "{{ temperature }}"
            - service: climate.set_fan_mode
              data:
                entity_id: "{{ entity }}"
                fan_mode: "{{ fan }}"
        - conditions: >
            {{ mode == "off" and not is_state(entity, "off") }}
          sequence:
            - service: climate.set_hvac_mode
              data:
                entity_id: "{{ entity }}"
                hvac_mode: "off"